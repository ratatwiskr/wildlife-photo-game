html,
body {
  margin: 0;
  padding: 0;
  overflow: hidden;
  height: 100%;
  background: #373737;
  display: flex;
  justify-content: center;
  align-items: center;
}

#viewport {
  position: relative;
  display: inline-block;
}

#camera-frame {
  position: relative;
  border-radius: 14px;
  overflow: hidden;
  background: linear-gradient(
    180deg,
    #2b2b2b 0%,
    #181818 100%
  ); /* camera body feel */
  padding: 18px; /* give some frame thickness */
  display: flex;
  gap: 12px;
  align-items: center;
}

/* visual hint when an auto-nudge is skipped: short friendly shake + pulse */
@keyframes nudgeSkipShake {
  0% {
    transform: translateX(0) scale(1);
  }
  20% {
    transform: translateX(-6px) scale(0.995);
  }
  40% {
    transform: translateX(6px) scale(0.998);
  }
  60% {
    transform: translateX(-4px) scale(0.999);
  }
  80% {
    transform: translateX(4px) scale(1);
  }
  100% {
    transform: translateX(0) scale(1);
  }
}

#camera-frame.nudge-skip {
  animation: nudgeSkipShake 700ms cubic-bezier(0.2, 0.9, 0.3, 1);
  box-shadow: 0 10px 30px rgba(0, 0, 0, 0.45),
    0 0 18px rgba(255, 120, 100, 0.06) inset;
}

.camera-body-inner {
  flex: 1 1 auto;
  display: block;
  position: relative; /* ensure viewfinder aligns to canvas area */
  max-width: 78vw;
}

/* debug mode: make camera body mostly transparent so overlays are visible */
#camera-frame.debug-mode {
  background: linear-gradient(
    180deg,
    rgba(43, 43, 43, 0.18) 0%,
    rgba(24, 24, 24, 0.08) 100%
  );
}

#camera-frame.debug-mode .viewfinder .lens::before,
#camera-frame.debug-mode .viewfinder .lens::after {
  border-color: rgba(0, 255, 136, 0.85);
}

canvas#game {
  display: block;
  width: 100%;
  max-width: 1400px;
  aspect-ratio: 4 / 3;
  height: auto;
  background-color: #000000;
  touch-action: none; /* allow stylus dragging without browser gestures */
  border-radius: 6px;
}

.viewfinder {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  pointer-events: none;
  display: flex;
  align-items: center;
  justify-content: center;
}

.viewfinder .lens {
  width: 68%;
  height: 68%;
  background: transparent;
  position: relative;
}

/* create two vertical bracket halves: left and right */
.viewfinder .lens::before,
.viewfinder .lens::after {
  content: "";
  position: absolute;
  top: 12px;
  bottom: 12px;
  width: 24%;
  pointer-events: none;
}

/* left bracket */
.viewfinder .lens::before {
  left: 6%;
  border-left: 6px solid rgba(255, 255, 255, 0.95);
  border-top: 6px solid rgba(255, 255, 255, 0.95);
  border-bottom: 6px solid rgba(255, 255, 255, 0.95);
  box-sizing: border-box;
  border-radius: 4px 0 0 4px;
}

/* right bracket */
.viewfinder .lens::after {
  right: 6%;
  border-right: 6px solid rgba(255, 255, 255, 0.95);
  border-top: 6px solid rgba(255, 255, 255, 0.95);
  border-bottom: 6px solid rgba(255, 255, 255, 0.95);
  box-sizing: border-box;
  border-radius: 0 4px 4px 0;
}

#camera-hud {
  width: 140px;
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 10px;
  padding: 10px;
  background: rgba(24, 24, 24, 0.95); /* opaque camera body side panel */
  color: #fff;
  border-radius: 10px;
}

/* hud-top placeholder removed to avoid empty ruleset */

/* Back button positioned at top-right of camera-frame (large) */
#camera-frame > button#back {
  position: absolute;
  right: 12px;
  top: 10px;
  z-index: 60; /* above HUD */
  background: linear-gradient(180deg, #ffffff10, #00000020);
  border: none;
  color: #fff;
  font-size: 34px;
  width: 64px;
  height: 64px;
  border-radius: 12px;
  display: flex;
  align-items: center;
  justify-content: center;
  box-shadow: 0 6px 18px rgba(0, 0, 0, 0.6);
}

#camera-hud #hud-top button#back {
  background: none;
  border: none;
  color: #fff;
  font-size: 20px;
}

#camera-hud #objective {
  font-size: 44px;
  line-height: 1;
  display: flex;
  align-items: center;
  justify-content: center;
  width: 100%;
  height: 56px;
  background: rgba(0, 0, 0, 0.15);
  border-radius: 8px;
}

/* scene picker responsive grid */
.scene-grid {
  display: flex;
  flex-wrap: wrap;
  gap: 12px;
}
.scene-grid > div {
  width: calc(25% - 12px);
  min-width: 180px;
  background: #333;
  padding: 8px;
  border-radius: 8px;
}
.scene-grid img {
  width: 100%;
  height: auto;
  display: block;
  border-radius: 4px;
}

.scene-card {
  cursor: pointer;
  display: flex;
  flex-direction: column;
  gap: 8px;
}
.scene-title {
  font-weight: 600;
  text-align: center;
  color: #fff;
}
.thumb-wrap {
  overflow: hidden;
  border-radius: 6px;
}
.scene-thumb {
  width: 100%;
  display: block;
  transition: filter 0.25s ease, transform 0.2s ease;
}
.scene-thumb.blurred {
  filter: blur(3px) brightness(0.9);
  transform: scale(1.02);
}
.scene-card:hover .scene-thumb {
  filter: none;
  transform: scale(1);
}

@media (max-width: 800px) {
  .scene-grid > div {
    width: calc(50% - 12px);
  }
}
@media (max-width: 420px) {
  .scene-grid > div {
    width: 100%;
  }
}

#ui {
  display: flex;
  flex-direction: column;
  gap: 8px;
  width: 100%;
  align-items: center;
}

#ui button,
#ui select {
  font-size: 1.2rem;
  padding: 10px 12px;
  border-radius: 8px;
  border: none;
  background: #444;
  color: white;
  cursor: pointer;
  width: 100%;
}

#ui button:hover {
  background: #666;
}

/* Shutter: big red round button */
#ui button#shutter {
  background: radial-gradient(circle at 35% 30%, #ff6b6b, #de2b2b);
  width: 96px;
  height: 96px;
  border-radius: 50%;
  font-size: 36px;
  display: flex;
  align-items: center;
  justify-content: center;
  box-shadow: 0 8px 0 rgba(0, 0, 0, 0.4);
  transition: transform 120ms ease, box-shadow 120ms ease;
}

#ui button#shutter:active {
  transform: translateY(6px) scale(0.98);
  box-shadow: 0 3px 0 rgba(0, 0, 0, 0.3);
}
